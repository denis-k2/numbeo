version: '3.8'
x-airflow-common:
  &airflow-common
  image: apache/airflow:2.8.4-python3.11
  environment:
    &airflow-common-env
    AIRFLOW__CORE__EXECUTOR: LocalExecutor
    AIRFLOW__DATABASE__SQL_ALCHEMY_CONN: postgresql+psycopg2://${DB_USER}:${DB_PASS}@postgres/${AIRFLOW_DB}
    AIRFLOW__CORE__FERNET_KEY: ${FERNET_KEY}
    AIRFLOW__CORE__DAGS_ARE_PAUSED_AT_CREATION: 'true'
    AIRFLOW__CORE__LOAD_EXAMPLES: 'false'
    AIRFLOW__CORE__LOAD_DEFAULT_CONNECTIONS: 'false'
  volumes:
    - ./airflow/dags:/opt/airflow/dags
    - ./airflow/logs:/opt/airflow/logs
    - ./airflow/config:/opt/airflow/config
    - ./airflow/plugins:/opt/airflow/plugins
  user: "${AIRFLOW_UID}"
  depends_on:
    &airflow-common-depends-on
    postgres:
      condition: service_healthy

x-logging: &default-logging
  driver: loki
  options:
    loki-url: 'http://localhost:3100/api/prom/push'
    loki-pipeline-stages: |
      - multiline:
          firstline: '^\d{4}-\d{2}-\d{2} \d{1,2}:\d{2}:\d{2}'
          max_wait_time: 3s
      - regex:
          expression: '^(?P<time>\d{4}-\d{2}-\d{2} \d{1,2}:\d{2}:\d{2},d{3}) (?P<message>(?s:.*))$$'

services:
  postgres:
    image: postgres:15.5
    env_file:
      - stack.env
    volumes:
      - /home/k2/relohelper-data/Relo_DB:/var/lib/postgresql/data
    ports:
      - "5432:5432"
    healthcheck:
      test: [ "CMD", "pg_isready", "-U", "${DB_USER}", "-d", "${AIRFLOW_DB}" ]
      interval: 5s
      retries: 5
    restart: always

  airflow-webserver:
    <<: *airflow-common
    command: webserver
    ports:
      - 8080:8080
    restart: always
    depends_on:
      <<: *airflow-common-depends-on

  airflow-scheduler:
    <<: *airflow-common
    command: scheduler
    restart: always
    depends_on:
      <<: *airflow-common-depends-on

  airflow-cli:
    <<: *airflow-common
    profiles:
      - debug
    environment:
      <<: *airflow-common-env
      CONNECTION_CHECK_MAX_COUNT: "0"
    command:
      - bash
      - -c
      - airflow

  jupyter:
    image: denk2/relo_jupyter:0.1.0
    environment:
      NB_USER: ${NB_USER}
      DATA_ENGR: ${DB_USER}
      JUPYTER_TOKEN: ${JUPYTER_TOKEN}
      POSTGRES_CONN: postgresql://${DB_USER}:${DB_PASS}@postgres/${DB_NAME_RELOHELPER}
    volumes:
      - /home/k2/Relohelper/scraping:/home/jovyan/scripts/
    ports:
      - "8888:8888"
    depends_on:
      - postgres
    restart: always

  relohelper:
    image: denk2/relohelper:v0.3.0
    command: python main.py
    env_file:
      - stack.env
    ports:
      - "80:8000"
    depends_on:
      - loki
      - postgres
      - prometheus
    environment:
      APP_NAME: "relohelper"
    logging: *default-logging

  loki:
    image: grafana/loki:2.9.3
    command: -config.file=/etc/loki/local-config.yaml
    ports:
      - "3100:3100"

  prometheus:
    image: prom/prometheus:v2.48.1
    ports:
      - "9090:9090"
    volumes:
      - /home/k2/Relohelper/fastapi/etc/prometheus:/workspace
    command:
      - --config.file=/workspace/prometheus.yml
      - --enable-feature=exemplar-storage
    depends_on:
      - loki
    logging: *default-logging

  tempo:
    image: grafana/tempo:2.3.1
    command: [ "--target=all", "--storage.trace.backend=local", "--storage.trace.local.path=/var/tempo", "--auth.enabled=false" ]
    ports:
      - "4317:4317"
      - "4318:4318"
    depends_on:
      - loki
    logging: *default-logging

  grafana:
    image: grafana/grafana:10.2.3
    ports:
      - "3000:3000"
    volumes:
      - /home/k2/Relohelper/fastapi/etc/grafana/:/etc/grafana/provisioning/datasources
      - /home/k2/Relohelper/fastapi/etc/dashboards.yaml:/etc/grafana/provisioning/dashboards/dashboards.yaml
      - /home/k2/Relohelper/fastapi/etc/dashboards:/etc/grafana/dashboards
    depends_on:
      - loki
      - prometheus
    logging: *default-logging